{"version":3,"sources":["components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.jsx","components/Filter/FilterStyled.js","components/Filter/Filter.jsx","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["ContactFormStyled","styled","div","ContactForm","state","name","number","nameId","uuidv4","phoneId","handelInputChange","event","target","value","setState","handelFormSubmit","preventDefault","console","log","props","onSubmit","className","this","id","type","pattern","title","required","onChange","autocomplete","Component","FilterStyled","Filter","filter","ContactListStyled","ul","ContactList","contacts","deleteContact","map","contact","onClick","App","addContact","text","newContact","toLowerCase","includes","alert","prevState","contactId","changeFilter","getVisibleContacts","normalizedFilter","filterContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b172ab05.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst ContactFormStyled = styled.div`\n  align-items: center;\n  text-align: center;\n  margin-bottom: 30px;\n\n  .form-label {\n    display: block;\n    margin-bottom: 10px;\n    font-family: \"Franklin Gothic Medium\", \"Arial Narrow\", Arial, sans-serif;\n    font-weight: 500;\n    font-size: 20px;\n    color: #6b7b96;\n  }\n  .form-input {\n    display: block;\n    padding: 5px;\n    text-align: center;\n    margin: 0 auto;\n    color: #636161;\n    outline: none;\n  }\n\n  input:focus {\n    box-shadow: 1px 1px 2px 0 #12bcb0;\n  }\n\n  .addBtn {\n    margin-top: 20px;\n    padding: 5px;\n    background-color: transparent;\n    border: 2px solid gray;\n    border-radius: 5px;\n    font-weight: 700;\n    background: linear-gradient(45deg, #0b2349 20%, #0d61bc 75%, #8aa9d6);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n\n    &:hover,\n    &:focus {\n      box-shadow: 1px 1px 2px 0 #0b2349;\n    }\n  }\n`;\n\nexport default ContactFormStyled;\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactFormStyled from \"./ContactFormStyled\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameId = uuidv4();\r\n  phoneId = uuidv4();\r\n\r\n  handelInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelFormSubmit = (event) => {\r\n    const { name, number } = this.state;\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    this.props.onSubmit(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ContactFormStyled>\r\n        <form className=\"contacts-form\" onSubmit={this.handelFormSubmit}>\r\n          <label className=\"form-label\" id={this.nameId}>\r\n            Name\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={this.nameId}\r\n              onChange={this.handelInputChange}\r\n              autocomplete=\"off\"\r\n            />\r\n          </label>\r\n          <label className=\"form-label\" id={this.phoneId}>\r\n            Number\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={this.phoneId}\r\n              onChange={this.handelInputChange}\r\n              autocomplete=\"off\"\r\n            />\r\n          </label>\r\n\r\n          <button className=\"addBtn\" type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </ContactFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from \"styled-components\";\n\nconst FilterStyled = styled.div`\n  text-align: center;\n\n  .title {\n    color: #6b7b96;\n    margin-bottom: 10px;\n  }\n\n  .finde-input {\n    display: block;\n    padding: 5px;\n    text-align: center;\n    margin: 0 auto;\n    color: #636161;\n    outline: none;\n  }\n\n  input:focus {\n    box-shadow: 1px 1px 2px 0 #12bcb0;\n  }\n`;\nexport default FilterStyled;\n","import React from \"react\";\r\nimport FilterStyled from \"./FilterStyled\";\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <FilterStyled>\r\n      <h3 className=\"title\">Finde contacts by name</h3>\r\n      <form>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={filter}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={onChange}\r\n            className=\"finde-input\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </label>\r\n      </form>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\n\nconst ContactListStyled = styled.ul`\n  margin-top: 30px;\n  .item {\n    &:not(:last-child) {\n      margin-bottom: 15px;\n    }\n  }\n  p {\n    display: inline-block;\n    margin-right: 20px;\n  }\n\n  .name {\n    color: #052f74;\n    font-weight: 600;\n    font-size: 20px;\n  }\n\n  .number {\n    color: #202733;\n    font-weight: 600;\n    font-size: 17px;\n  }\n\n  .delBtn {\n    display: block;\n    margin-left: auto;\n    padding: 5px;\n    background: linear-gradient(45deg, #0b2349 20%, #0d61bc 75%, #8aa9d6);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    border: 2px solid gray;\n    border-radius: 5px;\n    font-weight: 700;\n    &:hover,\n    &:focus {\n      box-shadow: 1px 1px 2px 0 #0b2349;\n    }\n  }\n`;\n\nexport default ContactListStyled;\n","import React from \"react\";\r\nimport ContactListStyled from \"./ContactListStyled\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ContactListStyled>\r\n      {contacts.map((contact) => {\r\n        const { id, name, number } = contact;\r\n\r\n        return (\r\n          <li className=\"item\" key={id}>\r\n            <p className=\"name\">{name}:</p>\r\n            <p className=\"number\">{number}</p>\r\n            <button\r\n              className=\"delBtn\"\r\n              type=\"button\"\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm.jsx\";\nimport Filter from \"./components/Filter/Filter.jsx\";\nimport ContactList from \"./components/ContactList/ContactList.jsx\";\n\n// uuidv4(); для уникальных ключей\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  // contacts\n  addContact = (text, value) => {\n    console.log(text);\n    console.log(value);\n    const newContact = { id: uuidv4(), name: text, number: value };\n    if (\n      this.state.contacts\n        .map((contact) => contact.name.toLowerCase())\n        .includes(text.toLowerCase())\n    ) {\n      return alert(`Contact \"${text}\" already exists`);\n    }\n    this.setState((prevState) => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  // filter\n  changeFilter = (event) => {\n    this.setState({ filter: event.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const filterContacts = this.getVisibleContacts();\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filterContacts}\n          // contacts={this.state.contacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}